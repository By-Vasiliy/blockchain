// Copyright 2017-2018 Vasiliy Vasilyuk. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package blockchain

import "testing"

func TestClient_GetBalanceImp(t *testing.T) {
	c := newClient()
	addresses := append(addressesForTestings,
		"1125fpvoxNCi1NYmoXi3w5pjHeqkjbkzG8",
		"112BWnrjkBAFrha5GENuj76pSnvfD7u9h5",
		"112P9ju5uTvvj5JZ6H3SNRy6mqxsXVnB9K",
		"112UrBq9b8gaVp39c2JUbNfsaVudZYKbiM",
		"112eX4zCJXNduxauMk9FuUReWdnZGdiWjc",
		"112imq6hQuz4JgRH4C8mC437UnZbfN9QKh",
		"113324vM6NBar2q72w6iDCdQvPnPQw8Tvw",
		"113CeqQ1KYsWFqYMcFy9qFunZmCF7XfoQw",
		"113L5KypgiTGxZ4AJQ7A7JNrYPUBYktZVG",
		"113LjzSP4xPAMHw6oQcdQWsJoasKzZPQjJ",
		"113Q8aTgqDtxu4X2kjQQkNxH1m9AqJCvv4",
		"113Z8q6zh4vG1zp4Z845mPviuTLcyThAbp",
		"113d3h3zxMRBZVhCfq76VYZMW2VE4m51W3",
		"113f1TiK7ABVTcqzUtbA9G8YRBibSGTbiB",
		"113fUykAqRVumtAovasfwi4N6fotviPEP3",
		"113fiz1m5ofgDnPueDXRXqyDMa8J3EirWZ",
		"113ia32FwWSJuVAYYUdMgjRJjdJF33MGM5",
		"1142hJvFKU4EDNuf1U1iH1eoTX46FdNrN5",
		"114JFJQGgc1BXFGkZHnhf4LKg1pXa8UWF6",
		"114L8drHpMLEnpSLjVeaH9heCZctBg3a6R",
		"114Nivh7CUDz9X8u6def3ftXCXtDvpDvCN",
		"114hkGKaJNydJZZik1pB14L8saAJtm8QBe",
		"114hvMb8gCQv5GsmpZPEkVTp8xXBrwLJC6",
		"1155YzARWAfGy5Ps8Xerse9UrNqYEaZDNc",
		"1159hS9MLk8Uef1hayqLkfuBEhgbFAysgZ",
		"115AqQzgEwjQuny1GzDS35hqwDvfKZB4YN",
		"115EBLcfCDv4bs3npFvALg7LZX6CGo5p6h",
		"115JE1Nk8aLsCx5u391AUX73Dh5J4jsgCk",
		"115NYEeeCyWVePWvUYhHo2m59ZaKZPqUws",
		"115QD9spBw4AFmat5xKXSHSiXQZYhcZNNb",
		"115TjRPrjRSUMK615bSqqKqR8W8BSBVxWe",
		"115V2QAkmSPK3aJjY3RZL4pUMavxq33SNN",
		"115Z2Sa9ZJejfMhgt3CGW7TsutVXWFA6J",
		"115aTZNpzjcP4FwGtqJ4z7DFomU5rU1fJD",
		"115cU7d8YVkwJb6ffHGeT1m3rzdt4itCid",
		"115f3u99BmTKUTaKJ172QdLQnU86oCBcxp",
		"115saQAPTYvjoN9T7NGCBNFLsF2KTuwyxT",
		"116Hd8oTXeN6y4LwtM9w7mSrPLSRJtTXQ4",
		"11BJRnNL118Dz92dRig3WkBKwsd7RWgUB",
		"11ENLeeLAGDjtSr8KHCoiL6puqHsrjfvi",
		"11LdGSPwDZMH5xWoRzVvfS5Xxd5n5bEuA",
		"11N4m2vDWRGQx529K8H4t4yjcwexD4PY6",
		"11fArDihRKMNEMTg5mHEqEnnMuSR8MDRj",
		"11fMJ8dDd5gbCqiogG3PbwczHA8CdXYBE",
		"11z87QriSRnC1iVTB8o9mcKdJncsdUc4z",
		"121D2qdFHWequS27PvMBvVXU8eStuTcfHj",
		"121FhfwTNM9MkPTU7c2pzDA25LF16h2Xym",
		"121GwCaTmhj76nj1zkYTDo9gNR5YpiESRx",
		"121HUwgrYxGHTzrwMjDw62xz8wzzRXt6BR",
		"121Ljtr2wcALAcGL58YRWmE1Gx2QTyZM61",
		"121PD8dUB7qV3iBti2oh749FB6ewKhrUVd",
		"121cv4CHWwu8xmjGhqom43ZjXFumkB5ohg",
		"122RvX3eFXqLp5Zyupwq8aLtZJUq5VvxPw",
		"122TNHQimuGxJ5vbsgbtXQgvYfnVHY2aay",
		"122W3QwBT1QLBMRAwCrMFFWeUnFYLH4oyh",
		"122h75p67q5wh69Xxp5oDyDPrYKuzo3joB",
		"122jZHmPhFYf1iCe82hWCYTnGAKn8Xqs6e",
		"122sTu29XCokfPBMXv6zKsq7ps9ge6juiz",
		"122uBxNSkfv5GpxM4xCNYxdp2f4MCDbLSo",
		"122vzE4D9VC2yYTmhrDq5ysPHHx7nd3gkh",
		"122zHqVVaY21SEjSPeHqVVs9qFDwTV3duS",
		"123ESusWstSnuXdpPfycMU7qC6nRtxECVp",
		"123Y6idN5rGHfxxVzkNd4kjiXgukh1LUff",
		"123c8dvG8W1PE3My9GNRXYgrFQpuUay22L",
		"123fB7BMBpeGFk6CESri16bNxdv7i5dFbL",
		"123ij7gq3sFD9Sh6BsHTauXzsTZup3o2hA",
		"123ob76vfnVHevMS1QrXHWBbV359FG2Qip",
		"1248FPUB4s1cDqi2yHZZANv1QfA8QjXyB1",
		"124GzZSwZtpEJQiuzDfi3Z9qJpK185X4Y4",
		"124Sis5tiVSJvCficyuwUdYVMGHiEZqDXQ",
		"124VJXHEctueDrzq9yX8kvkU35bD4mg3vq",
		"124YoiaSaUssbBeP5RukbSN9Evc3UJfwPj",
		"124kekw4j1cAGxwyzZqHNmsVUcNXrdcfxw",
		"1252UXTxWCKNne94yzTjDdfdqdARAK8nQ1",
		"125HAGz9JTU32FseiS5wYojaMGSgMravdT",
		"125LWvvcKysjmCzJ1NtEQjXtj3EtDdmw3a",
		"125WeXgyrE4beiEeQewoaXf4H9BL5RiDoP",
		"125XyLvAVWk1YXTY37b5XS7ubRX1NASp3t",
		"125aAJJBUTg62VCbvSudgQen8ppL7KQ8XK",
		"125ifdpuZw3chwrmr5d5gCQiCfn8ExhfnL",
		"125mcPvPQ7vTvLnEedyKR1rqrT3SGASHZJ",
		"125pBY3TfUVf68DYs4hWbNVWqZ1q9UZxgw",
		"12618b8VmLAt5NJQUXQWrixvFcbpX8GYfj",
		"126CJRuNRMnSFRfSmgDmCDxF7Wo7CJ2Y66",
		"126GZiDskXF71zZ2ZySTSCM89NZvwVM2EJ",
		"126XeHyTDTwMa9PATNghHpnJkTDcfosSz4",
		"126YSmGU58JqdAwzw87MPn7XZfPxYyFhYH",
		"126hAw7WtWZn8NL3UCN1VkLk7d6WBcQzdu",
		"126vyLvkLwofvmua9Gu1r8zhtQm29dXHQQ",
		"126xcG4b45yZiPs8F8FotxiYRZ7u8tNcH6",
		"1273UMTmzwHBruimCnepy7d9oP1rhRx7YK",
		"127L53sgE92qbBGQBbqPHxPdW8hKPSEy4J",
		"127LeiAbRtQr8pKnQRQjzvRCvouPGNKJhm",
		"127NiyGqxkYoB1EfZUzw3cH5Vv9TDUhHHF",
		"127UegeiCZVXv84o8ffNcemUHLkiTXmNEk",
		"127YfgnGEuALyCXZVhX25Q4QTAt6WGgkRd",
		"127aMzUhSR4VXK1xMtb26MTUY6PpTffAUd",
		"127ibjmi2Lms7i3NbEKo5U7KBidLnAki8v",
		"127wSjYAZ2RgG85VQxAgunYnhMPhYy4R7u",
		"1282m2WGknnSS4QYJKqFyThYvsYn61HFa5",
		"128Ksg2S84u7x9VTRgAerrJXPCt3XpXr24",
		"128MPy79bDBJ5MCdkURPpXesEiRTDuZhe2",
		"128XyscgsK2o5ojuWfVez27wfGFaJbm49S",
		"128aqRDipyfrENyPVyLKeXqVtW6Wy9D78z",
		"128hSeVxwHtZQYHSZLK2tyREd8SraVxcRF",
		"128xs3A8EpJyEee2vqfqZ83q7TPh5LoBpN",
		"1292UdQ5EWnq7LveRN3nnoUC5yu3xMGkgd",
		"1298gboxZT58qpGTZw7aNAaR7fnEAqdkbt",
		"1299Ve1G3Nv2qLS2Fzo6oai7nCUcxmTDCb",
		"129BgPBNABeGGJmARrjS1xNWaoHfEh9ksL",
		"129DaqQS3i5fpRR4D128DsNh9kFavp4RRX",
		"129W26N8a2XbQXxWnR8NV82szHbhFiTL2s",
		"129fYjHWWWiAkDJHxKfzn9QGESC9M3Na5H",
		"129kgfNsSpHi5i6EUb616e9nvELBgCxKoT",
		"129qmnFJYjk3bNuM4oL397CM1fqsNxBcPm",
		"12A3xnLisbWPbMyceBReuum7Zbae1Ug5Md",
		"12Af4dME636KaQe34S8n8NPbd4tQF8oB5d",
		"12AgBP2Y39u3gMxM1uy82ij86epSDRnoxM",
		"12Agr6oLyWxGQ9eZdUDGLFq2KE2uGpjFH2",
		"12Ame9DCmAsGR2XxWZRtrD3QBXXKP2qnoz",
		"12AqsuXnbRBeo6qaScCGaS3aSVDicMMB9F",
		"12At4GGP8J5p4MtdjNy1SPSkqKEM1mw2FS",
		"12AtjfsB25Ee178vjqh7gsEn8nYRNykYJ4",
		"12BCHy27R52p3qH4d5R7zcNFSY7atxHeQB",
		"12Bb5bVwEqyMY66hEXG1Go5Hph39jRS33L",
		"12BbhQbqWWTyczZDPxWihxenAameLXQSV5",
		"12BgPKM8YW4ZmkyeHbFcJMqhm7Gf5tWT8q",
		"12BgyQnQmZPPeYj4nPWZDg2Jzv5LyLMSun",
		"12Bn7uBHp2yvwcdJEqghyYbGSqoV6ESXU7",
		"12ByU7n9HuDKVtxUuLq6EbeEKDDFKhP5Jn",
		"12C4FV98mcvT7uaEnqHofaGJSbBwqSbMAc",
		"12C4ShDjDmAWQtgT8j1QKYsaBsNXfZxphb",
		"12CB9Zj44gzXr2ZMSoeKLP3FoBckvappcN",
		"12CBxzaFtepv2LnK8EndmKQgtmsAujJMoD",
		"12CLhuw7QBwaUdS7TAGeYYb3JYR9rtmAmm",
		"12CNNF1B92NmaqJtB21LicFJioU9M46yRA",
		"12CRW6hCS2k1ZUtxShHBbNmL6jUR16Scpm",
		"12CcHQExJanzE9rrt31tDAizHjnHuqLA97",
		"12CiHpU5DqT8dJ4Bud1uEzFKnYEoRaJ4Co",
		"12CpK8apTJfaMSiPYhGMDdaRRFYoS721Px",
		"12DCqgpBhuubEvt5cQ8BoPd13bcdL4fFXk",
		"12DKqik3KVqwjQgK9KXDtFMiGYuZbMPX7W",
		"12DkF18gTVUuMg5FWrXV8ykf8Fx9Rt8HWP",
		"12DkcsFJvednWtFVA9BXWh7k8Hqb7c9otH",
		"12DqLx7XGw7SDhGRSZsvgmyMTcubKYEGKz",
		"12DyVUTPvEWdjuGH1m8w7wcLvaqaDSV1ft",
		"12EMawScrggxKxrpkn7nT6xLJ4SX3VWn5N",
		"12ESarWb4GMYQyZ9Aj63eCgtcjHCb5fHJo",
		"12EbT5nzHGmRxAwffbQp3pWupJZ54TzBiY",
		"12EcmGFuvxyo7LEHKZXR4Te6X8ak5kh7bs",
		"12Ef8Vsw3s3VnrXbLu3zgs8muZVeabApyp",
		"12EgBL5pVqCU8MEBWrbW5WaAH3add8M1Vj",
		"12Eqq2YuTU5q5F7L1khsqMYzFfeU4xmjD2",
		"12F3dpBq5UkJA2jLgHRyPsWv7SYesbbhcz",
		"12F5iGM4yuQaAFvNW5324gtAXScHLFdzJr",
		"12FE87ddMCAczob4CMns1aukw9n43rQ8gD",
		"12FRNGTsDRC4Wx2ckG6E341K1Ar6GpTKAK",
		"12FTSngCryXD7gsCZpZsb2cU93bs2mJdgX",
		"12FmJScKjmf4tAqnRtuJ5LVjaw36e5XUQ9",
		"12FyqEuM8EDYgubFWdPgL3LGziPTb8wAyE",
		"12G1ovkPCQ9HaJVgncjkgvqpy47oosS3DE",
		"12GHt9GndaGZ4QKHvbGZ4JqJnyAon2W5jc",
		"12GJ3RgQESoZ2FrKEpfybcrZnrjizy1GtC",
		"12GKE82A42i9juHqyhzCFmiXZLQNmqqr1d",
		"12GNzZrPsr5MwwwZqZYut2hV8JLkXtwgST",
		"12GWey9vfZhcPCGgeTMbSWFnRfkhbnHEcn",
		"12GXdsifTodkQRryQLBzxgA5zHYujMvUBQ",
		"12GpD4M1v77mJyNZyP1BYNoX2sSFScfyiF",
		"12GrFgeg664LbmGsNxGBZU3Y8V7LMrc7yH",
		"12H5zttmnHdjbeVrs6aP2x8jP41wduZEmv",
		"12HAJqVd15X8j8WCkoytLLJLbSoHSDcTUH",
		"12HCHb81dZ8KYUXcpzehiFEqKHLaepHqUh",
		"12HFetSD9iVtbdTcCi9a9w5GSDGatxLdQC",
		"12HP7Aw8YdMJ9EhpD6v3h5B5ZSHCFvXWXN",
		"12JJXJWwAHaTpYvVQVg2SA8ctxsnXE156p",
		"12JPqfaXYNpk6C5XDKiMKrSZUzWRrvX9ed",
		"12JYijWy28R9WhvygjTNfxfM2rUj8rNjRk",
		"12JsKnPzzq6e8CctzGpyVpcQZ3CTnkdQ7X",
		"12JuzSr51KSQC5mcrE7BJgA5hd1A4UiZ3c",
		"12K244t6Q8nNYEMStxZU8WnxzDyvpGBfLt",
		"12KE4M8XmbmPAfgsniZRQGnWbZTT2QZAkv",
		"12KR2rYWDbRN1MvgRKxziU8pczRTxRivAE",
		"12KkeeRkiNS13GMbg7zos9KRn9ggvZtZgx",
		"12KkxkrPeSR9H1SnbKT2UPepLgarz3tGHp",
		"12KsUWoFtSnCpbB4US6XZK7PhSfnbs3dci",
		"12KxVJRWwEJYzDRCm42PCctJSyjs89WDeQ",
		"12LBGJEfweEBfMHXGqhwuRV2nsFbj6zdtF",
		"12LDRAaWUEXgA2FF2VrLp61LiDat9E4A7U",
		"12LTywBSTZnhpu9tNcpr7fqwWYRz1WxdGz",
		"12LVunQ8HaPfqzebspYcCUEjNDYdsRwLuH",
		"12LYLLjJzGE7y4tvUZaJMyuMHhfsutmbjh",
		"12LheCz3e4CJHpMPq75egBszVQREExPfxY",
		"12Loo7i58Cq97VgW79GdbadLppVvM2fKS5",
		"12Lrz4QV7aaYjYiBtUAzF1Ktnadbm3VALi",
		"12LxQb7EHGvNAnT6QxNQTztdWpjrTFNKun",
		"12MSFK8yEvktXYHkG7e35mTxyRXBx1cV2f",
		"12MdH2J6gTUgfX5w85Y7EYqVsJ4WPH6HJo",
		"12Ms4CPhyYThto9RfxsuiYKHFYMhaHyj1T",
		"12MyH1yvp4eob6RdbW25TsGDBHLbmQBmcy",
		"12NB5xrHQh4nNcZz6DYPXxvGvazVTN39DR",
	)

	balances, e := c.GetBalanceImp(addresses)
	if e != nil {
		t.Fatal(customError(e))
	} else {
		t.Log("GetBalanceImp: ", len(balances))
	}

}

func TestClient_GetBalance(t *testing.T) {
	balances, e := newClient().GetBalance(addressesForTestings)
	if e != nil {
		t.Fatal(customError(e))
	}

	for k, v := range balances {
		if v.FinalBalance > v.TotalReceived {
			t.Fatal("Error parsing total received")
		}

		if (v.FinalBalance > 0 || v.TotalReceived > 0) && v.NTx < 1 {
			t.Fatal("Received incorrect information about the balance or number of transactions")
		}

		t.Logf("%34s %11d %11d %5d", k, v.FinalBalance, v.TotalReceived, v.NTx)
	}

	t.Logf("Total addreses: %3d, total balances %3d", len(addressesForTestings), len(balances))
	if len(addressesForTestings) != len(balances) {
		t.Fatal("The number of addresses does not match the number received balances")
	}

	if _, e = newClient().GetBalance([]string{}); e == nil {
		t.Fatal("There must be a mistake")
	}
}
